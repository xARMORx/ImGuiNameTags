/*
	This is a SAMP API project file.
	Developer: LUCHARE <luchare.dev@gmail.com>
	
	See more here https://github.com/LUCHARE/SAMP-API
	
	Copyright (c) 2018 BlastHack Team <BlastHack.Net>. All rights reserved.
*/

#pragma once

#ifndef SAMPAPI_EXPORT
#define SAMPAPI_EXPORT
#endif
#define SAMPAPI_VERSION   2
#define SAMPAPI_NAMESPACE sampapi
#define SAMPAPI_PACK_PUSH __pragma(pack(push, 1))
#define SAMPAPI_PACK_POP  __pragma(pack(pop))
#define SAMPAPI_NAMESPACE_BEGIN(ns) \
    namespace SAMPAPI_NAMESPACE { \
        namespace ns {
#define SAMPAPI_NAMESPACE_BEGIN_PACKED(ns) \
    SAMPAPI_PACK_PUSH \
    SAMPAPI_NAMESPACE_BEGIN(ns)
#define SAMPAPI_END \
    } \
    }
#define SAMPAPI_END_PACKED \
    } \
    } \
    SAMPAPI_PACK_POP
#define SAMPAPI_BEGIN_COMMON namespace SAMPAPI_NAMESPACE {
#define SAMPAPI_END_COMMON   }
#define SAMPAPI_UNUSED       0
#define SAMPAPI_VAR

#define SAMPAPI_BEGIN_V037R1        SAMPAPI_NAMESPACE_BEGIN(v037r1)
#define SAMPAPI_BEGIN_PACKED_V037R1 SAMPAPI_NAMESPACE_BEGIN_PACKED(v037r1)

#define SAMPAPI_BEGIN_V037R3_1        SAMPAPI_NAMESPACE_BEGIN(v037r3)
#define SAMPAPI_BEGIN_PACKED_V037R3_1 SAMPAPI_NAMESPACE_BEGIN_PACKED(v037r3)

#define SAMPAPI_BEGIN_V037R5_1        SAMPAPI_NAMESPACE_BEGIN(v037r5)
#define SAMPAPI_BEGIN_PACKED_V037R5_1 SAMPAPI_NAMESPACE_BEGIN_PACKED(v037r5)

struct ID3DXFont;
struct ID3DXSprite;
struct ID3DXRenderToSurface;
struct ID3DXLine;

struct IDirect3DSurface9;
struct IDirect3DTexture9;
struct IDirect3DDevice9;
struct IDirect3DStateBlock9;

class CDXUTDialog;
class CDXUTListBox;
class CDXUTEditBox;
class CDXUTScrollBar;
class CDXUTIMEEditBox;

SAMPAPI_BEGIN_COMMON

typedef unsigned long D3DCOLOR;
typedef unsigned long TICK;
typedef int           BOOL;

typedef int            GTAREF; // gta pool reference (scm handle)
typedef unsigned short ID;     // player, vehicle, object, etc
typedef unsigned char  NUMBER;
typedef void(__cdecl* CMDPROC)(const char*);

unsigned long SAMPAPI_EXPORT GetBase();
unsigned int SAMPAPI_EXPORT  GetAPIVersion();

inline unsigned long GetAddress(signed long offset) {
    return GetBase() + offset;
}

SAMPAPI_END_COMMON
/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'samp.dll'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

/* 1 */
enum __TI_flags
{
  TI_IsConst = 0x1,
  TI_IsVolatile = 0x2,
  TI_IsUnaligned = 0x4,
  TI_IsPure = 0x8,
  TI_IsWinRT = 0x10,
};

/* 2 */
enum __CT_flags
{
  CT_IsSimpleType = 0x1,
  CT_ByReferenceOnly = 0x2,
  CT_HasVirtualBase = 0x4,
  CT_IsWinRTHandle = 0x8,
  CT_IsStdBadAlloc = 0x10,
};

/* 3 */
struct _SCOPETABLE_ENTRY
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 4 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 5 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 6 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 7 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 8 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 9 */
struct FuncInfoV1
{
  int magicNumber;
  int maxState;
  void *pUnwindMap;
  int nTryBlocks;
  void *pTryBlockMap;
  int nIPMapEntries;
  void *pIPtoStateMap;
};

/* 10 */
struct UnwindMapEntry
{
  int toState;
  void *action;
};

